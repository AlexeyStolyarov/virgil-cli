.\" Automatically generated by Pandoc 1.16.0.2
.\"
.TH "virgil" "1" "June 14, 2016" "Virgil Security CLI (2.0.0)" "Virgil"
.hy
.SH NAME
.PP
\f[B]virgil\f[] \[en] command line tool for using Virgil Security full
stack functionality.
.SH SYNOPSIS
.PP
\f[B]virgil\f[] \f[I]command\f[] [\f[I]command_opts\f[]]
[\f[I]command_args\f[]]
.SH DESCRIPTION
.PP
The \f[B]Virgil\f[] program is a command line tool for using Virgil
Security stack functionality:
.IP \[bu] 2
encrypt, decrypt, sign and verify data;
.IP \[bu] 2
interact with Virgil Keys Service;
.IP \[bu] 2
interact with Virgil Private Keys Service.
.SH COMMON COMMANDS
.PP
\f[B]virgil\-keygen\f[](1) Generate a private
key (https://github.com/VirgilSecurity/virgil/wiki/Virgil-Glossary#private-key)
with provided parameters.
.PP
\f[B]virgil\-key2pub\f[](1) Extract a public
key (https://github.com/VirgilSecurity/virgil/wiki/Virgil-Glossary#public-key)
from the private key.
.PP
\f[B]virgil\-encrypt\f[](1) Encrypt data for given recipients who can be
defined by their Virgil Keys and by passwords.
.PP
\f[B]virgil\-decrypt\f[](1) Decrypt data for a given recipient who can
be defined by his public key or by his password.
.PP
\f[B]virgil\-sign\f[](1) Sign data with the private key.
.PP
\f[B]virgil\-verify\f[](1) Verify data and signature with the public
key.
.PP
\f[B]virgil\-hash\f[](1) Derives the obfuscated data from incoming
parameters using PBKDF
function (https://github.com/VirgilSecurity/virgil/wiki/Virgil-Glossary#pbkdf-function).
.PP
\f[B]virgil\-config\f[](1) Get information about Virgil CLI
configuration file.
.SH IDENTITY SERVICE COMMANDS
.TP
.B \f[B]virgil\-identity\-confirm\-global\f[](1)
Confirmation of the Identity.
Returns validation_token which is required for operations with global
Virgil
Cards (https://github.com/VirgilSecurity/virgil/wiki/Virgil-Glossary#global-virgil-card)
and the confirmed
Identity (https://github.com/VirgilSecurity/virgil/wiki/Virgil-Glossary#confirmed-identity):
.RS
.RE
.IP "1." 3
\f[B]virgil\-card\-create\-global\f[](1);
.IP "2." 3
\f[B]virgil\-card\-revoke\-global\f[](1);
.IP "3." 3
\f[B]virgil\-public\-key\-revoke\-global\f[](1).
.PP
\f[B]virgil\-identity\-confirm\-private\f[](1) Confirmation of the
Identity.
Returns the validation_token which is required for the operations with
private Virgil
Cards (https://github.com/VirgilSecurity/virgil/wiki/Virgil-Glossary#private-virgil-card)
and the confirmed identity:
.IP "1." 3
\f[B]virgil\-card\-create\-private\f[](1);
.IP "2." 3
\f[B]virgil\-card\-revoke\-private\f[]((1);
.IP "3." 3
\f[B]virgil\-public\-key\-revoke\-private\f[](1).
.PP
\f[B]virgil\-identity\-verify\f[](1) Verify an identity Returns action
id (https://github.com/VirgilSecurity/virgil/wiki/Virgil-Glossary#action-id).
.PP
\f[B]virgil\-identity\-valid\f[](1) Validates the passed token.
Checks whether
time (https://github.com/VirgilSecurity/virgil/wiki/Virgil-Glossary#time-to-live)
and
usage (https://github.com/VirgilSecurity/virgil/wiki/Virgil-Glossary#count-to-live)
limits for validation
token (https://github.com/VirgilSecurity/virgil/wiki/Virgil-Glossary#validation-token)
are not exceeded.
.SH KEYS SERVICE COMMANDS
.PP
\f[B]virgil\-public\-key\-get\f[](1) Get user's Virgil Public Key from
the Virgil Keys service.
.PP
\f[B]virgil\-public\-key\-revoke\-global\f[](1) Revoke a group of global
Virgil Cards from the Public Keys Service connected by
public\-key\-id (https://github.com/VirgilSecurity/virgil/wiki/Virgil-Glossary#public-key-id)
+
card\-id (https://github.com/VirgilSecurity/virgil/wiki/Virgil-Glossary#card-id)
of one of the Cards from the group.
.PP
\f[B]virgil\-public\-key\-revoke\-private\f[](1) Revoke a group of
private Virgil Cards from the Public Keys Service connected by
public\-key\-id (https://github.com/VirgilSecurity/virgil/wiki/Virgil-Glossary#public-key-id)
+
card\-id (https://github.com/VirgilSecurity/virgil/wiki/Virgil-Glossary#card-id)
of one of the Cards from the group.
.SH VIRGIL CARD SERVICE COMMANDS
.PP
\f[B]virgil\-card\-create\-global\f[](1) Create a global Virgil Card.
This means \f[B]virgil\-identity\-verify\f[](1)
\f[B]virgil\-identity\-confirm\-global\f[](1).
.PP
\f[B]virgil\-card\-create\-private\f[](1) Create a private Virgil Card.
This means \f[B]virgil\-identity\-confirm\-private\f[](1).
.PP
\f[B]virgil\-card\-search\-global\f[](1) Search for a global Virgil Card
from the Virgil Keys Service by:
.IP "1." 3
application_name \- search an application global Virgil Card.
.IP "2." 3
email \- search a global Virgil Card.
.PP
\f[B]virgil\-card\-search\-private\f[](1) Search the private Virgil Card
from the Virgil Keys Service.
.PP
\f[B]virgil\-card\-get\f[](1) Get user's Virgil
Card (https://github.com/VirgilSecurity/virgil/wiki/Virgil-Glossary#virgil-card)
from the Virgil Keys service.
.PP
\f[B]virgil\-card\-revoke\-private\f[](1) Revoke a private Virgil Card
by the card\-id.
.PP
\f[B]virgil\-card\-revoke\-global\f[](1) Revoke a global Virgil Card by
the card\-id.
.SH PRIVATE KEYS SERVICE COMMANDS
.PP
\f[B]virgil\-private\-key\-add\f[](1) Add existing the private key to
the Private Keys Service.
.PP
\f[B]virgil\-private\-key\-get\f[](1) Get the private key from the
Virgil Private Keys Service.
.PP
\f[B]virgil\-private\-key\-del\f[](1) Delete the private key object from
the Private Keys Service.
.SH AUTHORS
(c) Virgil Security, Inc.
