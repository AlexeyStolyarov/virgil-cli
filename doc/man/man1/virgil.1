.\" Automatically generated by Pandoc 1.17.1
.\"
.TH "virgil" "1" "June 14, 2016" "Virgil Security CLI (2.0.0)" "Virgil"
.hy
.SH NAME
.PP
\f[B]virgil\f[] \[en] command line tool for using Virgil Security full
stack functionality.
.SH SYNOPSIS
.PP
\f[B]virgil\f[] \f[I]command\f[] [\f[I]command_opts\f[]]
[\f[I]command_args\f[]]
.SH DESCRIPTION
.PP
The \f[B]Virgil\f[] program is a command line tool for using Virgil
Security stack functionality:
.IP \[bu] 2
encrypt, decrypt, sign and verify data;
.IP \[bu] 2
interact with Virgil Keys Service;
.IP \[bu] 2
interact with Virgil Private Keys Service.
.SH COMMON COMMANDS
.PP
\f[B]keygen\f[] Generate a private
key (https://github.com/VirgilSecurity/virgil/wiki/Virgil-Glossary#private-key)
with provided parameters.
.PP
\f[B]key2pub\f[] Extract a public
key (https://github.com/VirgilSecurity/virgil/wiki/Virgil-Glossary#public-key)
from the private key.
.PP
\f[B]encrypt\f[] Encrypt data for given recipients who can be defined by
their Virgil Keys and by passwords.
.PP
\f[B]decrypt\f[] Decrypt data for a given recipient who can be defined
by his public key or by his password.
.PP
\f[B]sign\f[] Sign data with the private key.
.PP
\f[B]verify\f[] Verify data and signature with the public key.
.PP
\f[B]exhash\f[] Derives hash from the given data with PBKDF
function (https://github.com/VirgilSecurity/virgil/wiki/Virgil-Glossary#pbkdf-function).
.PP
\f[B]config\f[] Get information about Virgil CLI configuration file.
.SH IDENTITY SERVICE COMMANDS
.TP
.B \f[B]identity\-confirm\-global\f[]
Confirmation of the Identity.
Returns validation_token which is required for operations with Global
Virgil
Cards (https://github.com/VirgilSecurity/virgil/wiki/Virgil-Glossary#global-card)
and the confirmed
Identity (https://github.com/VirgilSecurity/virgil/wiki/Virgil-Glossary#confirmed-identity):
.RS
.RE
.IP "1." 3
\f[B]card\-create\-global\f[];
.IP "2." 3
\f[B]card\-revoke\-global\f[];
.IP "3." 3
\f[B]public\-key\-revoke\-global\f[].
.PP
\f[B]identity\-confirm\-private\f[] Confirmation of the Identity.
Returns the validation_token which is required for the operations with
Private Virgil
Cards (https://github.com/VirgilSecurity/virgil/wiki/Virgil-Glossary#private-card)
and the confirmed identity:
.IP "1." 3
\f[B]card\-create\-private\f[];
.IP "2." 3
\f[B]card\-revoke\-private\f[];
.IP "3." 3
\f[B]public\-key\-revoke\-private\f[].
.PP
\f[B]identity\-verify\f[] Verify an identity Returns action
id (https://github.com/VirgilSecurity/virgil/wiki/Virgil-Glossary#action-id).
.PP
\f[B]identity\-valid\f[] Validates the passed token.
Checks whether
time (https://github.com/VirgilSecurity/virgil/wiki/Virgil-Glossary#time-to-live)
and
usage (https://github.com/VirgilSecurity/virgil/wiki/Virgil-Glossary#count-to-live)
limits for validation
token (https://github.com/VirgilSecurity/virgil/wiki/Virgil-Glossary#validation-token)
are not exceeded.
.SH KEYS SERVICE COMMANDS
.PP
\f[B]public\-key\-get\f[] Get user's Virgil Public Key from the Virgil
Keys service.
.PP
\f[B]public\-key\-revoke\-global\f[] Revoke a group of Global Virgil
Cards from the Public Keys Service connected by
public\-key\-id (https://github.com/VirgilSecurity/virgil/wiki/Virgil-Glossary#public-key-id)
+
card\-id (https://github.com/VirgilSecurity/virgil/wiki/Virgil-Glossary#card-id)
of one of the Cards from the group.
.PP
\f[B]public\-key\-revoke\-private\f[] Revoke a group of Private Virgil
Cards from the Public Keys Service connected by
public\-key\-id (https://github.com/VirgilSecurity/virgil/wiki/Virgil-Glossary#public-key-id)
+
card\-id (https://github.com/VirgilSecurity/virgil/wiki/Virgil-Glossary#card-id)
of one of the Cards from the group.
.SH VIRGIL CARD SERVICE COMMANDS
.PP
\f[B]card\-create\-global\f[] Create a Global Virgil Card.
This means \f[B]identity\-verify\f[] \f[B]identity\-confirm\-global\f[].
.PP
\f[B]card\-create\-private\f[] Create a Private Virgil Card.
This means \f[B]identity\-confirm\-private\f[].
.PP
\f[B]card\-search\-global\f[] Search for a Global Virgil Card from the
Virgil Keys Service by:
.IP "1." 3
application_name \- search an application Global Virgil Card.
.IP "2." 3
email \- search a Global Virgil Card.
.PP
\f[B]card\-search\-private\f[] Search the Private Virgil Card from the
Virgil Keys Service.
.PP
\f[B]card\-get\f[] \f[B]card\-get\f[] Get user's Virgil
Card (https://github.com/VirgilSecurity/virgil/wiki/Virgil-Glossary#card)
from the Virgil Keys service.
.PP
\f[B]card\-revoke\-private\f[] Revoke a Private Virgil Card by the
card\-id.
.PP
\f[B]card\-revoke\-global\f[] Revoke a Global Virgil Card by the
card\-id.
.SH PRIVATE KEYS SERVICE COMMANDS
.PP
\f[B]private\-key\-add\f[] Add existing the private key to the Private
Keys Service.
.PP
\f[B]private\-key\-get\f[] Get the private key from the Virgil Private
Keys Service.
.PP
\f[B]private\-key\-del\f[] Delete the private key object from the
Private Keys Service.
.SH SEE ALSO
.PP
virgil\-keygen(1)
.PD 0
.P
.PD
virgil\-key2pub(1)
.PD 0
.P
.PD
virgil\-encrypt(1)
.PD 0
.P
.PD
virgil\-decrypt(1)
.PD 0
.P
.PD
virgil\-sign(1)
.PD 0
.P
.PD
virgil\-verify(1)
.PD 0
.P
.PD
virgil\-exhash(1)
.PD 0
.P
.PD
virgil\-config(1)
.PD 0
.P
.PD
virgil\-identity\-confirm\-global(1)
.PD 0
.P
.PD
virgil\-identity\-confirm\-private(1)
.PD 0
.P
.PD
virgil\-identity\-verify(1)
.PD 0
.P
.PD
virgil\-identity\-valid(1)
.PD 0
.P
.PD
virgil\-public\-key\-get(1)
.PD 0
.P
.PD
virgil\-public\-key\-revoke\-global(1)
.PD 0
.P
.PD
virgil\-public\-key\-revoke\-private(1)
.PD 0
.P
.PD
virgil\-card\-create\-global(1)
.PD 0
.P
.PD
virgil\-card\-create\-private(1)
.PD 0
.P
.PD
virgil\-card\-search\-global(1)
.PD 0
.P
.PD
virgil\-card\-search\-private(1)
.PD 0
.P
.PD
virgil\-card\-revoke\-private(1)
.PD 0
.P
.PD
virgil\-card\-revoke\-global(1)
.PD 0
.P
.PD
virgil\-private\-key\-add(1)
.PD 0
.P
.PD
virgil\-private\-key\-get(1)
.PD 0
.P
.PD
virgil\-private\-key\-del(1)
.SH AUTHORS
(c) Virgil Security, Inc.
