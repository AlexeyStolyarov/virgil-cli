.\" Automatically generated by Pandoc 1.16.0.2
.\"
.TH "ENCRYPT" "1" "February 29, 2016" "Virgil Security CLI (2.0.0)" "BSD General Commands Manual"
.hy
.SH NAME
.PP
\f[B]encrypt\f[] \[en] encrypt data for given recipients
.SH SYNOPSIS
.IP
.nf
\f[C]
\ \ \ \ virgil\ encrypt\ \ [\-i\ <file>]\ [\-o\ <file>]\ [\-c\ <file>]\ [\-V]\ [\-\-]\ [\-\-version]\ [\-h]
\ \ \ \ \ \ \ \ \ \ \ \ <recipient>\ ...
\f[]
.fi
.SH DESCRIPTION
.PP
The utility allows you to encrypt data with a password or combination of
Public Key + recipient\-id.
recipient\-id is an identifier which will be connected with Public Key.
If a \f[I]sender\f[] has a Card, his recipient\-id is the Card's id.
Also Public Keys is saved in the Card.
.SH OPTIONS
.IP
.nf
\f[C]
\ \ \ \ \-i\ <file>,\ \ \-\-in\ <file>
\ \ \ \ \ Data\ to\ be\ encrypted.\ If\ omitted,\ stdin\ is\ used.

\ \ \ \ \-o\ <file>,\ \ \-\-out\ <file>
\ \ \ \ \ Encrypted\ data.\ If\ omitted,\ stdout\ is\ used.

\ \ \ \ \-c\ <file>,\ \ \-\-content\-info\ <file>
\ \ \ \ \ Content\ info\ \-\ meta\ information\ about\ encrypted\ data.\ If\ omitted,
\ \ \ \ \ becomes\ a\ part\ of\ the\ encrypted\ data.

\ \ \ \ \-V,\ \ \-\-VERBOSE
\ \ \ \ \ Show\ detailed\ information

\ \ \ \ \-\-,\ \ \-\-ignore_rest
\ \ \ \ \ Ignores\ the\ rest\ of\ the\ labeled\ arguments\ following\ this\ flag.

\ \ \ \ \-\-version
\ \ \ \ \ Displays\ version\ information\ and\ exits.

\ \ \ \ \-h,\ \ \-\-help
\ \ \ \ \ Displays\ usage\ information\ and\ exits.

\ \ \ \ <recipient>\ \ (accepted\ multiple\ times)
\ \ \ \ \ Contains\ information\ about\ one\ recipient.

\ \ \ \ \ Format:

\ \ \ \ \ [password|id|vcard|email|pubkey|private]:<value>

\ \ \ \ \ where:

\ \ \ \ \ \ \ \ *\ if\ password,\ then\ <value>\ \-\ recipient\[aq]s\ password;

\ \ \ \ \ \ \ \ *\ if\ id,\ then\ <value>\ \-\ recipient\[aq]s\ UUID\ associated\ with\ Virgil

\ \ \ \ \ \ \ \ \ Card\ identifier;

\ \ \ \ \ \ \ \ *\ if\ vcard,\ then\ <value>\ \-\ recipient\[aq]s\ the\ Virgil\ Card\ file

\ \ \ \ \ \ \ \ \ \ stored\ locally;

\ \ \ \ \ \ \ \ *\ if\ email,\ then\ <value>\ \-\ recipient\[aq]s\ email;

\ \ \ \ \ \ \ \ *\ if\ pubkey,\ then\ <value>\ \-\ recipient\[aq]s\ Public\ Key\ +\ identifier,\ for\ example:
\ \ \ \ \ \ \ \ \ \ \ \ pubkey:bob/public.key:ForBob.

\ \ \ \ \ \ \ \ *\ if\ private,\ then\ set\ type:value\ for\ searching\ Private\ Virgil
\ \ \ \ \ \ \ \ \ \ \ \ Card[s]\ \ with\ confirmed\ identity\ (see\ \[aq]virgil\ card\-create\-private\[aq]).
\ \ \ \ \ \ \ \ \ \ \ \ For\ example:\ private:<obfuscated_type>:<obfuscated_value>\ (\ obfiscator\ \-\ see\ \[aq]virgil\ hash\[aq])
\f[]
.fi
.SH EXAMPLES
.IP "1." 3
Alice encrypts the data for Bob using his email (searching the Global
Virgil Card[s]):
.RS 4
.IP
.nf
\f[C]
virgil\ encrypt\ \-i\ plain.txt\ \-o\ plain.txt.enc\ email:bob\@domain.com
\f[]
.fi
.RE
.IP "2." 3
Alice encrypts the data for Bob using his email (searching the Private
Virgil Card[s]):
.RS 4
.IP
.nf
\f[C]
virgil\ encrypt\ \-i\ plain.txt\ \-o\ plain.txt.enc\ private:email:bob\@domain.com
\f[]
.fi
.RE
.IP "3." 3
Alice encrypts the data for Bob using his email (searching the Private
Virgil Card[s]):
.RS 4
.IP
.nf
\f[C]
virgil\ encrypt\ \-i\ plain.txt\ \-o\ plain.txt.enc\ private:<obfuscated_type>:<obfuscated_value>
\f[]
.fi
.RE
.IP "4." 3
Alice encrypts the data for Bob and Tom using their emails:
.RS 4
.IP
.nf
\f[C]
virgil\ encrypt\ \-i\ plain.txt\ \-o\ plain.txt.venc\ email:bob\@domain.com\ email:tom\@domain.com
\f[]
.fi
.RE
.IP "5." 3
Alice encrypts the data with a password:
.RS 4
.IP
.nf
\f[C]
virgil\ encrypt\ \-i\ plain.txt\ \-o\ plain.txt.venc\ password:strong_password
\f[]
.fi
.RE
.IP "6." 3
Alice encrypts the data with a combination of Public Key +
recipient\-id:
.RS 4
.IP
.nf
\f[C]
virgil\ encrypt\ \-i\ plain.txt\ \-o\ plain.txt.venc\ pubkey:public.key:ForBob
\f[]
.fi
.RE
.SH SEE ALSO
.PP
virgil(1)
.PD 0
.P
.PD
decrypt(1)
.SH AUTHORS
(c) Virgil Security Inc.
