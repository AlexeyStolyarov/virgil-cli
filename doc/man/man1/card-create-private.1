.\" Automatically generated by Pandoc 1.16.0.2
.\"
.TH "CARD\-CREATE\-PRIVATE" "1" "February 29, 2016" "Virgil Security CLI (2.0.0)" "Virgil"
.hy
.SH NAME
.PP
\f[B]card\-create\f[] \[en] create a Private Virgil Card
.SH SYNOPSIS
.IP
.nf
\f[C]
\ \ \ \ virgil\ card\-create\-private\ \ {\-\-public\-key\ <file>|\-e\ <arg>}\ {\-d\ <arg>|\-f\ <file>}
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ [\-o\ <file>]\ \-k\ <file>\ [\-p\ <arg>]\ [\-V]\ [\-\-]
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ [\-\-version]\ [\-h]
\f[]
.fi
.SH DESCRIPTION
.PP
A Private Virgil Card is a base of building the net of trust between
users.
There are two types of Cards: 1.
with a confirmed identity.
\f[I]validated_identity\f[] is required, it can be obtained in
identity\-confirm(1) 2.
with an unconfirmed identity.
.PP
A Card with a confirmed Identity guarantees that a user with given email
has been checked.
.PP
A Card with an unconfirmed Identity lets use Public Keys Service
infrastructure while staying anonymous.
There is \f[I]no way\f[] to turn a Card with an unconfirmed Identity
into a Card with a confirmed Identity!
.PP
Connections between Cards can be created.
Model many\-to\-many is implemented in PKI.
It means that we can have Cards with: 1.
one Public Key and \f[I]different\f[] Identities; 1.
one Public Key and \f[I]one\f[] identity; 1.
different Public Keys and \f[I]different\f[] Identities; 1.
different Public Keys and \f[I]one\f[] Identity; 1.
one Public Key and \f[I]one\f[] Identity connected with public\-key\-id;
1.
one Public Key and \f[I]different\f[] identities connected with
public\-key\-id.
.SH OPTIONS
.IP
.nf
\f[C]
\ \ \ \ \-\-public\-key\ <file>
\ \ \ \ \ (OR\ required)\ \ Public\ key
\ \ \ \ \ \ \ \ \ \-\-\ OR\ \-\-
\ \ \ \ \-e\ <arg>,\ \ \-\-public\-key\-id\ <arg>
\ \ \ \ \ (OR\ required)\ \ Public\ key\ identifier


\ \ \ \ \-d\ <arg>,\ \ \-\-identity\ <arg>
\ \ \ \ \ (OR\ required)\ \ Identity:\ type:value
\ \ \ \ \ \ \ \ \ \-\-\ OR\ \-\-
\ \ \ \ \-f\ <file>,\ \ \-\-validated\-identity\ <file>
\ \ \ \ \ (OR\ required)\ \ Validated\ identity.\ See\ \[aq]virgil
\ \ \ \ \ identity\-confirm\-private\[aq]


\ \ \ \ \-o\ <file>,\ \ \-\-out\ <file>
\ \ \ \ \ virgil\ Card.\ If\ omitted,\ stdout\ is\ used.

\ \ \ \ \-k\ <file>,\ \ \-\-key\ <file>
\ \ \ \ \ (required)\ \ Private\ key

\ \ \ \ \-p\ <arg>,\ \ \-\-private\-key\-password\ <arg>
\ \ \ \ \ Password\ to\ be\ used\ for\ Private\ Key\ encryption.

\ \ \ \ \-V,\ \ \-\-VERBOSE
\ \ \ \ \ Show\ detailed\ information

\ \ \ \ \-\-,\ \ \-\-ignore_rest
\ \ \ \ \ Ignores\ the\ rest\ of\ the\ labeled\ arguments\ following\ this\ flag.

\ \ \ \ \-\-version
\ \ \ \ \ Displays\ version\ information\ and\ exits.

\ \ \ \ \-h,\ \ \-\-help
\ \ \ \ \ Displays\ usage\ information\ and\ exits.
\f[]
.fi
.SH EXAMPLES
.IP "1." 3
Create a Private Virgil Card with a confirmed Identity
.RS 4
.IP
.nf
\f[C]
virgil\ card\-create\-private\ \-f\ validated\-identity.txt\ \-\-public\-key\ public.key\ \-k\ private.key\ \-o\ my_card.vcard
\f[]
.fi
.RE
.IP "2." 3
Create a connection with an already existing a Private Virgil Card with
a confirmed Identity by public\-key\-id
.RS 4
.IP
.nf
\f[C]
virgil\ card\-create\-private\ \-f\ validated\-identity.txt\ \-\-public\-key\-id\ *public_key_id*\ \-k\ private.key\ \-o\ my_card.vcard
\f[]
.fi
.RE
.IP "3." 3
Create a Private Virgil Card with an unconfirmed Identity
.RS 4
.IP
.nf
\f[C]
virgil\ card\-create\-private\ \-d\ email:anonim\@gmail.com\ \-\-public\-key\ public.key\ \-k\ private.key\ \-o\ my_card.vcard
\f[]
.fi
.RE
.IP "4." 3
Create a connection with an already existing a Private Virgil Card with
an unconfirmed Identity by public\-key\-id
.RS 4
.IP
.nf
\f[C]
virgil\ card\-create\-private\ \-d\ email:anonim\@gmail.com\ \-\-public\-key\-id\ *public_key_id*\ \-k\ private.key\ \-o\ my_card.vcard
\f[]
.fi
.RE
.SH SEE ALSO
.PP
virgil(1)
.PD 0
.P
.PD
keygen(1)
.PD 0
.P
.PD
identity\-confirm\-private(1)
.SH AUTHORS
(c) Virgil Security Inc.
