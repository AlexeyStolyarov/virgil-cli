% DECRYPT(1) Virgil Security CLI (2.0.0) | Virgil
% (c) Virgil Security Inc
% February 29, 2016

# NAME

**decrypt** -- decrypt data with given password or given Private Key

# SYNOPSIS

**virgil decrypt** [--in *file*] [--out *file*] [--content-info *file*] [--key *file* [--key-pwd *arg*]] --recipient *arg*

# DESCRIPTION

Decrypt data with given password or given Private Key.

# OPTIONS

-i *file*, \--in *file*
:   Data to be decrypted. If omitted stdin is used.

-o *file*, \--out *file*
:   Decrypted data. If omitted stdout is used.

-c *file*, \--content-info *file*
:   Content info. Use this option to specify explicit content info if it not embedded in the encrypted data.

-k *file*, \--key *file*
:   Recipient's Private Key.

-p *arg*, \--key-pwd *arg*
:   Recipient's Private Key password (max length 31 ASCII characters).

-r *arg*, \--recipient *arg*
:   (required) Recipient defined in format:

        [pass|id|vkey|email]:<value>

    where:

    * if `pass`, then *value* - recipient's password (max length 31 ASCII characters);
    * if `id`, then <value> - UUID associated with Virgil Public Key identifier;
    * if `vkey`, then *value* - recipient's Virgil Public Key file stored locally.
    * if `email`, then *value* - recipient's email;

# EXAMPLES

1. Decrypt data for user identified by email:

        virgil decrypt -i plain.txt.enc -o plain.txt -k private.key -r email:user@domain.com

1. Decrypt data for user identified by password:

        virgil decrypt -i plain.txt.enc -o plain.txt -k private.key -r pass:strong_password

# SEE ALSO

[`encrypt(1)`](https://github.com/VirgilSecurity/virgil-cli/blob/v2.0.0/doc/markdown/encrypt.1.md)
